introduction: |
    ### Introduction ###
    Your primary task is to explore the concept drift within a business process, which refers to the evolution or changes in the process's behavior over time.  
    You will use BPMN (Business Process Model and Notation) diagrams and changes informations from two distinct periods to identify these changes. 
    
changes_informations: |
    ### Changes Informations ### 
    You will also be provided with a detailed breakdown of the changes between the two periods, categorized as follows:
        - Changed_transition_probability: Transitions with altered occurrence likelihood. 
        - Changed_transition_frequency: Transitions whose frequency of occurrence has changed. 
        - Transitions_new: New transitions introduced into the process. 
        - Transitions_Deleted: Removed transitions. 
        - Activities_new: New activities added to the process. 
        - Activities_Deleted: Activities removed from the process. 
    Analyze these changes to understand the nature and impact of the concept drift. 
    Follow the changes informations: 

bpmn_informations: |
    ### BPMN Informations ###
    Understand BPMN Symbols: Familiarize yourself with the BPMN symbols used in the diagrams. 
    Sequential operations are denoted by '->', parallel operations by '+', conditional operations by 'X', looping operations by '*', and silent transitions by 'tau'. Nested operations are enclosed in parentheses '()'. 
    Compare BPMN Diagrams: You are given two BPMN diagrams representing the process flow before and after the detection of concept drift. 
    Carefully compare these diagrams to identify any structural changes in the sequences, including the addition or deletion of activities. 

controlflow_change_patterns:
    - sre_instructions: >
        The 'SRE' (Serial Routing Enablement) involves the addition or deletion of one or more activities between two existing activities. 
        For example, the sequence could change from '->(A, B)' to '->(A, C, B)' or vice versa, where 'A', 'B', and 'C' are activities, and '->' symbolizes sequential flow. 
        This scenario implies that after the drift, activity 'C' is inserted in the process and in a sequential flow between other two activities, in this case 'A' and 'B', 
        or it could be deleted from the process and from a sequential flow bteween two other activities.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows differences in Sequences (->) fragments, 
        if the involved activities are new or deleted, and if they have new and deleted transitions. 

    - pre_instructions: >
        The 'PRE' (Parallel Routing Enablement) involves the addition or deletion of one or more activities in or from a parallel branch. 
        For example, the sequence could change from '->(A, B, C)' to '->(A, +(B, D), C)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' symbolizes sequential flow,  
        and '+' represents an AND or parallel operation within the BPMN (Business Process Model and Notation).
        This scenario implies that after the drift, activitiy 'D' is  inserted in the process and in a parallel branch, or 'D' could be deleted from the process and from a parallel branch.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows new or deleted ANDs (+) fragments, 
        if the involved activities are new or deleted, and if they have new and deleted transitions. 

    - cre_instructions: >
        The 'CRE' (Conditional Routing Enablement) involves the addition or deletion of one or more activities in or from a conditional branch.
        For example, the sequence could change from '->(A, B, C)' to '->(A, X(B, D), C)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' symbolizes sequential flow,  
        and 'X' represents a XOR or conditional operation within the BPMN (Business Process Model and Notation).
        This scenario implies that the drift, activitiy 'D' is  inserted in the process and in a conditional branch, or 'D' could be deleted from the process and from a conditional branch.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows new or deleted XORs (X) fragments, 
        if the involved activities are new or deleted, and if they have new and deleted transitions. 

    - cp_instructions: >
        The 'CP' (Copy) involves duplicate an existing activity of the process to another location in the process. 
        For example, the sequence could change from '->(A, B, C, D)' to '->(A, B, C, A, D)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' indicates a sequential operation.
        This scenario implies that after the drift, activities 'A' appears in another location in the process as well.
        Note: Identifying this pattern can be challenging, especially because neither the BPMN diagrams nor the transitions information may be correctly identified the duplication of an activity.
        Both informations may only show that the duplicated activity has new transitions or maybe identify the duplication as a loop.
        Tip: In such scenarios, it's advisable to delve deeper and investigates the new transitions. 
        Using the previous example, activity 'A' would have a new transition from activity 'C' ('C', 'A') and a new transition to activity 'D' ('A', 'D'). 
        These two new transitions should be undestood as a new addition between 'C' and 'D', and, consequently, identified the duplication of 'A'.

    - rp_instructions: >
        The 'RP' (Replace) involves the replace of one or more activities by other new activities. 
        For example, the sequence could change from '->(A, B, C)' to '->(A, D, C)', where 'A', 'B', 'C', and 'D' are activities, '->' symbolizes sequential flow.  
        This scenario implies that after the drift, activity 'B' is replaced by activity 'D', which are a new activity in the process.
        Tip: This scenario involve the addition and deletion, so look if activities are inserted and another deleted.

    - sw_instructions: >
        The 'SW' (Swap) involves the swap of two existing activities in the process. 
        For example, the sequence could change from '->(A, B, C, D, E, F)' to '->(A, E, C, D, B, F)', where 'A', 'B', 'C', 'D', 'E', and 'F' are activities, '->' symbolizes sequential flow.  
        This scenario implies that after the drift, activity 'B' is swapped with activity 'E'.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information may shows the activities in different locations in the process, both occupying the exact position of the other, 
        and if both involved activities have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - sm_instructions: >
        The 'SM' (Serial Move) involves move an existing activity to between two existing activities. 
        For example, the sequence could change from '->(A, B, C, D, E)' to '->(A, C, D, B, E)', where 'A', 'B', 'C', 'D', and 'E' are activities, '->' symbolizes sequential flow.  
        This scenario implies that after the drift, activity 'B', which was between activities 'A' and 'C', is moved to between activities 'D' and 'E'.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information may shows the activity in different locations in the process, 
        and if the involved activitiy have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - cm_instructions: >
        The 'CM' (Conditional Move) involves move an existing activity into or out of a conditional branch. 
        For example, the sequence could change from '->(A, B, C, D, E, F)' to '->(A, C, D, X(B, E), F)', where 'A', 'B', 'C', 'D', 'E', and 'F' are activities, '->' symbolizes sequential flow, 
        and 'X' represents a XOR or conditional operation within the BPMN (Business Process Model and Notation).  
        This scenario implies that after the drift, activity 'B', which was between activities 'A' and 'C', is moved to between activities 'D' and 'F' and in a conditional branch with activity 'E'.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information may shows the activity in different locations in the process, shows new or deleted XORs (X) fragments, 
        and if the involved activitiy have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - pm_instructions: >
        The 'PM' (Parallel Move) involves move an existing activity into or out of a parallel branch. 
        For example, the sequence could change from '->(A, B, C, D, E, F)' to '->(A, C, D, +(B, E), F)', where 'A', 'B', 'C', 'D', 'E', and 'F' are activities, '->' symbolizes sequential flow, 
        and '+' represents an AND or parallel operation within the BPMN (Business Process Model and Notation). 
        This scenario implies that after the drift, activity 'B', which was between activities 'A' and 'C', is moved to between activities 'D' and 'F' and in a parallel branch with activity 'E'.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information may shows the activity in different locations in the process, shows new or deleted ANDs (+) fragments, 
        and if the involved activitiy have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - cf_instructions: >
        The 'CF' (Conflict) involves making activities initially mutually exclusive to be sequential, or vice versa. 
        For example, the sequence could change from '->(A, X(B, C), D)' to '->(A, B, C, D)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' indicates a sequential operation, 
        and 'X' represents a XOR or conditional operation within the BPMN (Business Process Model and Notation).
        This indicates that before the drift, activities 'B' and 'C' were mutually exclusive, suggesting that only one could occur in any process instance, 
        while after the drift, they have become sequential, implying a fixed order of execution.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows new or deleted XORs (X) fragments, 
        and if the involved activities have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - pl_instructions: >
        The 'PL' (Parallel) involves making activities initially parallel to be sequential, or vice versa. 
        For example, the sequence could change from '->(A, +(B, C), D)' to '->(A, B, C, D)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' indicates a sequential operation, 
        and '+' represents an AND or parallel operation within the BPMN (Business Process Model and Notation).
        This indicates that before the drift, activities 'B' and 'C' were parallel, suggesting that both would occur with no defined order between them,
        while after the drift, they have become sequential, implying a fixed order of execution.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows new or deleted ANDs (+) fragments, 
        and if the involved activitiy have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - cd_instructions: >
        The 'CD' (Control Dependancy) involves synchronizing two or more activities, where the convergence of multiple branches into a single subsequent branch occurs 
        such that the thread of control passes to the subsequent branch only when all preceding branches have been executed. 
        For example, the sequence could change from '->(A, +(B, ->(C, D)), E)' to '->(A, ->(+(B, C), D), E)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' indicates a sequential operation, 
        and '+' represents an AND or parallel operation within the BPMN (Business Process Model and Notation).
        This scenario implies that before the drift, activities 'B', 'C', and 'D' could proceed in parallel, but after the drift, 'B' and 'C' need to synchronize before initiating 'D'.
        Tip: In such scenarios, it's advisable to delve deeper and investigates if the BPMN information shows differences inside ANDs (+) fragments, 
        and if the involved activitiy have new and deleted transitions. This scenario does not involve activities addition or deletion.

    - lp_instructions: >
        The 'LP' (Loop) involves making activities initially loopable to be non-loopable, or vice versa. 
        For example, the sequence could change from '->(A, *(B, C, D), E)' to '->(A, B, C, D, E)' or vice versa, where 'A', 'B', 'C', 'D', and 'E' are activities, '->' indicates a sequential operation, 
        and '*' represents a loop operation within the BPMN (Business Process Model and Notation).
        This indicates that before the drift, activities 'B', 'C', and 'D' were in a loop, while after the drift, they were not in a loop.
        Tip: In such scenarios, if the BPMN information doesn't show the loop, it's advisable to delve deeper and investigates if deleted transitions led to activities that could lead to the activity in question,  
        which define a loop in the process.

    - cb_instructions: >
        The 'CB' (Conditional Branching) involves the modifications to the skippability of one or more activities. Specifically, an activity might become optional (skippable) or mandatory (non-skippable). 
        For example, the sequence could change from '->(A, B, C)' to '->(A, X(B, null), C)', where 'A', 'B', and 'C' are activities, '->' indicates a sequential operation, 
        and 'X' represents a XOR or conditional operation within the BPMN (Business Process Model and Notation).
        The term 'null' is used to indicate the absence of an activity in that branch, highlighting the conditional execution of 'B'.
        Note: Identifying this pattern can be challenging, especially in BPMN diagrams where the new conditional operations or XOR may not be correctly identified because of the branch with no activitiy, 
        making the new skippable nature of 'B' less apparent.
        Tip: In such scenarios, investigates all new or deleted transition carefully to understanding if it could represent a change in the skippablability to others activities. 
        Using our previous example, the new transition between 'A' to 'C' is causing B to become skippable. This scenario does not involve activities addition or deletion.

    - fr_instructions: >
        The 'FR' (Frequency) involves change the branching frequency of activities. 
        For example, the sequence could change from '->(A, X(B[550], C[450]), D)' to '->(A, X(B[700], C[300]), D)' or vice versa, where 'A', 'B', 'C', and 'D' are activities, '->' symbolizes sequential flow,  
        'X' represents a XOR or conditional operation within the BPMN (Business Process Model and Notation), and the information inside the '[]' represent the activity frequency.
        This indicates that before the drift, activity 'B' and 'C' frequency were similar, while after the drift, they were different.
        In other words, before the drift, the frequency of activities 'B' and 'C' had not statistical difference, and after the drift, theirs frequencies had statiscial difference.
        Note: In such scenarios, the involved activities hasn't any control-flow difference before and after the drift, only the branch frequency or branch probability have difference.
        Tip: Investigate activities which are in XORs (X) fragments, and transitions which are in Changed_transition_probability or Changed_transition_frequency but is not in Transitions_new or Transitions_deleted.    


conclusion: |
    ### Conclusion ###
    Based on your analysis of the BPMN diagrams and the detailed changes information, conclude whether a concept drift occurred, which specific change pattern has occurred (the most likely), and which activities are involved. 
    Your conclusion must be supported by evidence from your analysis, and be aware that another change pattern may has occurred and not the one you are analyzing. 
    Format your conclusion as follows, providing a clear and concise verdict on whether the change pattern is present: 
    '### result_dict = {'concept_drift' : 'No', 'change_pattern' : 'None', 'activities' : []} 
    or '### result_dict = {'concept_drift' : 'Yes', 'change_pattern' : 'Other', 'activities' : ['A', 'B']} 
    or '### result_dict = {'concept_drift' : 'Yes', 'change_pattern' : 'pattern_acronym', 'activities' : ['A', 'B']}. 
    Your analysis and conclusion are crucial in understanding the impact of concept drift on the business process. 
    Approach this task methodically, focusing on accuracy and evidence to support your conclusions.